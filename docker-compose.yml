name: ugc_service

include:
  - './mongo_cluster/compose.yml'
  - './kafka_cluster/compose.yml'
  - './ELK/compose.yml'


services:
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    image: ${API_DOCKER_IMAGE:?Api docker image name is required}
    restart: unless-stopped
    command: ["uvicorn", "--reload", "--host", "0.0.0.0", "--port", "${APP_PORT:-8000}", "--workers", "3", "src.main:app"]
    volumes:
      - ./api/:/app/
    secrets:
      - mongo-root-user
      - mongo-root-pwd
    env_file:
      - ./.env
    logging:
      driver: gelf
      options:
        gelf-address: udp://localhost:5044
        tag: 'api'
    healthcheck:
      test: curl -sS localhost:8000 > /dev/null && exit 0 || exit 1
      interval: 5s
      retries: 5
    profiles:
      - api
      - run
  tests:
    container_name: api_tests
    image: ${API_DOCKER_IMAGE}
    build:
      context: ./api
      dockerfile: Dockerfile
    command: /bin/bash -c "pip install -q -r ./requirements/api.test.txt && pytest"
    environment:
      - TEST_DB_URI=mongodb://test_db:27017/?directConnection=true
    volumes:
      - ./api/:/app/
    depends_on:
      test_db:
        condition: service_healthy
    profiles:
      - test
  test_db:
    container_name: api_test_mongodb
    image: mongo:8.0.1@sha256:9342a9279a9841fc5f8192e49dcaaf9404e6bb3a90e8cf134eb96074830dd448
    command: /app/initdb.sh
    volumes:
      - type: bind
        source: ./api/tests/test_db_init.sh
        target: /app/initdb.sh
    logging:
      driver: "none"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 15s
    profiles:
      - test
  consumer:
    container_name: analytics_events_consumer
    image: ${CONSUMER_DOCKER_IMAGE:?Consumer docker image name is required}
    build:
      context: ./ETL
      dockerfile: Dockerfile.etl
    volumes:
      - ./ETL/consumer.py:/app/consumer.py
    env_file:
      - ./.env
    depends_on:
      kafka0:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    profiles:
      - kafka_cluster
      - run

  nginx:
    image: nginx:1.27.0-alpine
    configs:
      - source: nginx_conf
        target: /etc/nginx/nginx.conf
        mode: 0440
    volumes:
      - nginx_logs:/var/logs/nginx/
    ports:
      - 80:80
    restart: unless-stopped
    profiles:
      - api
      - run

  clickhouse:
    container_name: clickhouse-server
    image: clickhouse
    ports:
      - 18123:8123
      - 19000:9000
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - ./clickhouse/initdb:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "clickhouse-client", "--host=localhost", "--query=SELECT 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    profiles:
      - kafka_cluster
      - run

configs:
  nginx_conf:
    file: ./nginx_server/config/nginx.conf

volumes:
  nginx_logs:
    name: ugc_nginx_logs

secrets:
  mongo-root-user:
    name: ugc-mongo-root-username
    file: ./mongo_cluster/secrets/root-user.txt
  mongo-root-pwd:
    name: ugc-mongo-root-pwd
    file: ./mongo_cluster/secrets/root-pwd.txt
