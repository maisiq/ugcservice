name: ugc_service_mongo_cluster

volumes:
  mongo-keyfile:
    name: ugc-mongo-keyfile

x-properties: &props
  image: mongo:8.0.1@sha256:9342a9279a9841fc5f8192e49dcaaf9404e6bb3a90e8cf134eb96074830dd448
  healthcheck:
    test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
    interval: 1m
    timeout: 30s
    retries: 5
    start_period: 1m
  profiles:
    - mongo_cluster
    - run
  logging:
      driver: 'none'

services:
  mongo-setup:
    image: alpine:3.21.3
    volumes:
      - mongo-keyfile:/keys:rw
    command: |
      /bin/sh -c "apk add --no-cache openssl
      openssl rand -base64 756 > /keys/mongo-keyfile
      chmod 600 /keys/mongo-keyfile
      chown 999:999 /keys/mongo-keyfile"
    profiles:
      - mongo_cluster
      - run

  mongors1n1:
    <<: *props
    container_name: mongors1n1
    command: /initdb.sh
    volumes:
      - mongo-keyfile:/keys/:ro
      - ./init/rs1.sh:/initdb.sh
    secrets:
      - mongo-root-user
      - mongo-root-pwd
    depends_on:
      mongo-setup:
        condition: service_completed_successfully
  mongors1n2:
    extends: mongors1n1
    command: >-
      mongod --shardsvr
      --replSet mongors1
      --dbpath /data/db
      --port 27017
      --bind_ip_all
      --auth
      --keyFile /keys/mongo-keyfile
    container_name: mongors1n2
    volumes:
      - mongo-keyfile:/keys/:ro

  mongors1n3:
    extends: mongors1n2
    container_name: mongors1n3

  mongors2n1:
    <<: *props
    container_name: mongors2n1
    command: /initdb.sh
    volumes:
      - mongo-keyfile:/keys/:ro
      - ./init/rs2.sh:/initdb.sh
    secrets:
      - mongo-root-user
      - mongo-root-pwd
    depends_on:
      mongo-setup:
        condition: service_completed_successfully

  mongors2n2:
    extends: mongors2n1
    container_name: mongors2n2
    command: >-
      mongod --shardsvr
      --replSet mongors2
      --dbpath /data/db
      --port 27017
      --bind_ip_all
      --auth
      --keyFile /keys/mongo-keyfile

  mongors2n3:
    extends: mongors2n2
    container_name: mongors2n3

  mongocfg1:
    <<: *props
    container_name: mongocfg1
    command: /initdb.sh
    volumes:
      - mongo-keyfile:/keys/:ro
      - ./init/cfg.sh:/initdb.sh
    depends_on:
      mongo-setup:
        condition: service_completed_successfully

  mongocfg2:
    extends: mongocfg1
    container_name: mongocfg2
    command: >-
      mongod --configsvr
      --replSet mongors1conf
      --port 27017
      --bind_ip_all
      --auth
      --keyFile /keys/mongo-keyfile

  mongocfg3:
    extends: mongocfg2
    container_name: mongocfg3

  mongos1:
    <<: *props
    container_name: mongos1
    command: /initdb.sh
    volumes:
      - mongo-keyfile:/keys/:ro
      - ./init/mongos.sh:/initdb.sh
    secrets:
      - mongo-root-user
      - mongo-root-pwd

  mongos2:
    extends: mongos1
    container_name: mongos2
    command: >-
      mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017
      --port 27017
      --bind_ip_all
      --keyFile /keys/mongo-keyfile
